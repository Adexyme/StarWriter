{"version":3,"file":"HtmlHandler.js","sourceRoot":"","sources":["../../src/HtmlHandler.ts"],"names":[],"mappings":";;;AAAA,6CAA0C;AAC1C,uDAAoD;AACpD,yCAAsC;AAEtC,2CAAwC;AACxC,MAAa,WAAW;IACtB,YACU,iBAA2B,IAAI,mBAAQ,EAAE,EACzC,YAA6B,IAAI,iCAAe,EAAE,EAClD,WAAgC,CACtC,QAAQ,CAAC,cAAc,CAAC,uBAAU,CAAC,YAAY,CAAC,CACjD,EACO,iBAAmC,CACzC,QAAQ,CAAC,cAAc,CAAC,uBAAU,CAAC,aAAa,CAAC,CAClD,EACO,wBAAwC,CAC9C,QAAQ,CAAC,cAAc,CAAC,uBAAU,CAAC,uBAAuB,CAAC,CAC5D;QAVO,mBAAc,GAAd,cAAc,CAA2B;QACzC,cAAS,GAAT,SAAS,CAAyC;QAClD,aAAQ,GAAR,QAAQ,CAEf;QACO,mBAAc,GAAd,cAAc,CAErB;QACO,0BAAqB,GAArB,qBAAqB,CAE5B;IACA,CAAC;IACG,iBAAiB;QACtB,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;YAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,EAAE;gBAC5B,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;oBACvB,IAAI,EAAE,GAAG,IAAI,uBAAU,EAAE,CAAC;oBAC1B,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC/D,oEAAoE;iBACrE;;oBAAM,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,SAAS,CAAC;YACnD,CAAC,CAAC;SACH;IACH,CAAC;IACM,gBAAgB;QACrB,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CACvD,IAAI,CAAC,QAAQ,CAAC,KAAK,CACpB,CAAC;IACJ,CAAC;IAEM,yBAAyB;QAC9B,MAAM,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC;QAErD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YAEzB,QAAQ,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;gBACzC,IAAI,CAAC,SAAS,CAAC,sBAAsB,CACnC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,iBAAiB,CAAC,CACrD,CAAC;gBAEF,IAAI,EAAE,GAAG,IAAI,uBAAU,EAAE,CAAC;gBAC1B,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC/D,oEAAoE;gBAEpE,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CACF;AAlDD,kCAkDC","sourcesContent":["import { UtilityCls } from \"./UtilityCls\";\r\nimport { ElementInserter } from \"./ElementInserter\";\r\nimport { MdParser } from \"./MdParser\";\r\nimport { marked } from \"marked\";\r\nimport { Remarkable } from \"remarkable\";\r\nexport class HtmlHandler {\r\n  constructor(\r\n    private markdownParser: MdParser = new MdParser(),\r\n    private eInserter: ElementInserter = new ElementInserter(),\r\n    private markdown = <HTMLTextAreaElement>(\r\n      document.getElementById(UtilityCls.inputElement)\r\n    ),\r\n    private markdownOutput = <HTMLLabelElement>(\r\n      document.getElementById(UtilityCls.outputElement)\r\n    ),\r\n    private markdownTagMenuHolder = <HTMLDivElement>(\r\n      document.getElementById(UtilityCls.markdownTagMenuholderID)\r\n    )\r\n  ) {}\r\n  public TextChangeHandler(): void {\r\n    if (this.markdown !== null) {\r\n      this.markdown.onkeyup = (e) => {\r\n        if (this.markdown.value) {\r\n          var md = new Remarkable();\r\n          this.markdownOutput.innerHTML = md.render(this.markdown.value);\r\n          //this.markdownOutput.innerHTML = marked.parse(this.markdown.value);\r\n        } else this.markdownOutput.innerHTML = \"<p></p>\";\r\n      };\r\n    }\r\n  }\r\n  public onloadIOElemInit(): void {\r\n    this.markdownOutput.innerHTML = this.markdownParser.parse(\r\n      this.markdown.value\r\n    );\r\n  }\r\n\r\n  public onloadMarkdownTagMenuInit(): void {\r\n    const elements = this.markdownTagMenuHolder.children;\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n      console.log(elements[i]);\r\n\r\n      elements[i].addEventListener(\"click\", () => {\r\n        this.eInserter.insertAtCursorPosition(\r\n          \"\\r\\n\" + elements[i].getAttribute(\"data-tag-string\")\r\n        );\r\n\r\n        var md = new Remarkable();\r\n        this.markdownOutput.innerHTML = md.render(this.markdown.value);\r\n        //this.markdownOutput.innerHTML = marked.parse(this.markdown.value);\r\n\r\n        console.log(\"iteration worked\", i);\r\n      });\r\n    }\r\n  }\r\n}\r\n"]}